{"version":3,"file":"common.3a57a14bd8b11e041e6d.js","mappings":"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","sources":["webpack://shogun-demo-client/./src/components/BasicMapComponent/index.tsx","webpack://shogun-demo-client/./src/components/Footer/index.less?bf45","webpack://shogun-demo-client/./src/components/Footer/index.tsx","webpack://shogun-demo-client/./src/hooks/useAppSelector.ts","webpack://shogun-demo-client/./src/components/BasicNominatimSearch/index.tsx","webpack://shogun-demo-client/./src/components/Header/index.less?b06e","webpack://shogun-demo-client/./src/components/Header/index.tsx","webpack://shogun-demo-client/./src/hooks/useAppDispatch.ts","webpack://shogun-demo-client/./src/store/toolMenu/index.ts","webpack://shogun-demo-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://shogun-demo-client/./src/components/PrintForm/index.less?f789","webpack://shogun-demo-client/./src/components/PrintForm/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.tsx","webpack://shogun-demo-client/./src/components/ToolMenu/index.less?b016","webpack://shogun-demo-client/./src/components/ToolMenu/index.tsx","webpack://shogun-demo-client/./src/App.less?984e","webpack://shogun-demo-client/./src/App.tsx","webpack://shogun-demo-client/./src/i18n/index.ts","webpack://shogun-demo-client/./src/i18n/translations.ts","webpack://shogun-demo-client/./src/store/logoPath/index.ts","webpack://shogun-demo-client/./src/store/title/index.ts","webpack://shogun-demo-client/./src/store/store.ts","webpack://shogun-demo-client/./src/index.less?df1e","webpack://shogun-demo-client/./src/index.tsx","webpack://shogun-demo-client/./src/App.less?ee38","webpack://shogun-demo-client/./src/components/Footer/index.less?a2b7","webpack://shogun-demo-client/./src/components/Header/index.less?b02d","webpack://shogun-demo-client/./src/components/PrintForm/index.less?6410","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://shogun-demo-client/./src/components/ToolMenu/FeatureInfo/index.less","webpack://shogun-demo-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://shogun-demo-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://shogun-demo-client/./src/components/ToolMenu/index.less?949c","webpack://shogun-demo-client/./src/index.less?2fc8"],"sourcesContent":["import React from 'react';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicMapComponent;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport {\n  createStringXY\n} from 'ol/coordinate';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map.getControls().getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map.getControls().getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: 'EPSG:25832',\n        undefinedHTML: '&nbsp;',\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  const openContactModal = (): void => {\n    window.open('https://www.terrestris.de/de/kontakt/', '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open('https://www.terrestris.de/de/impressum/', '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open('https://www.terrestris.de/de/datenschutzerklaerung/', '_blank');\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        <div\n          id=\"scale-line-container\"\n        />\n        <Divider\n          type=\"vertical\"\n        />\n        {t('Footer.scale')}:\n        <ScaleCombo\n          map={map}\n        />\n        <Divider\n          type=\"vertical\"\n        />\n        <div>\n          {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n        </div>\n        <Divider\n          type=\"vertical\"\n        />\n        <div>\n          {t('Footer.mousePosition')}:\n        </div>\n        <div\n          id=\"mouse-position\"\n          className=\"mouse-position\"\n        />\n      </div>\n      <div className=\"item-container right-items\">\n        <Button\n          onClick={openContactModal}\n          type=\"link\"\n        >\n          {t('Footer.contact')}\n        </Button>\n        <Button\n          onClick={openImprintModal}\n          type=\"link\"\n        >\n          {t('Footer.imprint')}\n        </Button>\n        <Button\n          onClick={openPrivacyModal}\n          type=\"link\"\n        >\n          {t('Footer.privacypolicy')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","import React from 'react';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\n\nimport BasicNominatimSearch from '../BasicNominatimSearch';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"title\"\n        >\n          {title}\n        </div>\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        <BasicNominatimSearch />\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  selectedKeys: string[];\n}\n\nconst initialState: ToolMenuState = {\n  selectedKeys: []\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setSelectedKey(state, action: PayloadAction<string>) {\n      state.selectedKeys.push(action.payload);\n    },\n    unsetSelectedKey(state, action: PayloadAction<string>) {\n      state.selectedKeys = state.selectedKeys.filter((key) => key !== action.payload);\n    }\n  }\n});\n\nexport const {\n  setSelectedKey,\n  unsetSelectedKey\n} = slice.actions;\n\nexport default slice.reducer;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Input\n} from 'antd';\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\ninterface CustomFieldInputProps extends InputProps {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  printManager,\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager && id) {\n      printManager.customParams[id] = inputText;\n    }\n  }, [printManager, inputText, id]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Button,\n  Form\n} from 'antd';\n\nimport {\n  FormProps\n} from 'antd/lib/form/Form';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlMap from 'ol/Map';\nimport OlSource from 'ol/source/Source';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\n\nimport './index.less';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  map: OlMap;\n  layerBlackList?: string[];\n  outputFormats?: string[];\n  layouts?: Layout[];\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  layerBlackList = [],\n  map,\n  printManager,\n  ...restProps\n}): JSX.Element => {\n  const [form] = Form.useForm();\n  const {\n    t\n  } = useTranslation();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const legendFilter = (l: OlLayer<OlSource>) => {\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          'SCALE': MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  };\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      await setCustomPrintParams();\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      printManager.download(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg'));\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setCustomPrintParams = async () => {\n    printManager.legendFilter = legendFilter;\n    printManager.customParams.printLegend = false;\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  if (!printManager?.isInitiated()) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"print\">\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      <Form\n        form={form}\n        className=\"print-form\"\n        layout=\"horizontal\"\n        labelCol={{\n          span: 4\n        }}\n        wrapperCol={{\n          span: 20\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"title\"\n          label={t('PrintForm.title')}\n          labelCol={{\n            span: 6\n          }}\n          wrapperCol={{\n            span: 18\n          }}\n          initialValue={t('PrintForm.initialTitle')}\n        >\n          <CustomFieldInput\n            maxLength={50}\n            printManager={printManager}\n            placeholder={t('PrintForm.titlePlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"comment\"\n          label={t('PrintForm.comment')}\n          labelCol={{\n            span: 6\n          }}\n          wrapperCol={{\n            span: 18\n          }}\n        >\n          <CustomFieldInput\n            maxLength={200}\n            printManager={printManager}\n            placeholder={t('PrintForm.commentPlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"layout\"\n          label={t('PrintForm.layout')}\n          initialValue={printManager?.getLayouts()[0]?.name}\n        >\n          <LayoutSelect\n            printManager={printManager}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"dpi\"\n          label={t('PrintForm.dpi')}\n          initialValue={72}\n        >\n          <ResolutionSelect\n            printManager={printManager}\n            placeholder={t('PrintForm.resolutionPlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"format\"\n          label={t('PrintForm.format')}\n          initialValue=\"pdf\"\n        >\n          <OutputFormatSelect\n            printManager={printManager}\n            outputFormats={['pdf', 'jpg', 'png']}\n            placeholder={t('PrintForm.outputFormatPlaceholder')}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            disabled={!printManager?.isInitiated()}\n            icon={<FontAwesomeIcon icon={faDownload} />}\n            loading={loading}\n            onClick={onDownloadClick}\n          >\n            {t('PrintForm.downloadBtnText')}\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faCopy\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\nimport {\n  Button,\n  Pagination,\n  TableProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo';\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName?: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName = 'Unknown layer',\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrenPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  const onChange = (page: number) => {\n    setCurrenPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const initVectorLayer = () => {\n      if (MapUtil.getLayerByName(map, vectorLayerName)) {\n        return;\n      }\n\n      const source = new OlSourceVector({\n        features: features\n      });\n\n      const fill = new OlStyleFill({\n        color: 'rgba(255, 255, 255, 0.15)'\n      });\n      const stroke = new OlStyleStroke({\n        color: 'rgba(209, 70, 47, 1)',\n        width: 2\n      });\n      const featureStyle = new OlStyle({\n        fill,\n        stroke,\n        image: new OlStyleCircle({\n          radius: 5,\n          fill,\n          stroke\n        })\n      });\n\n      const layer = new OlLayerVector({\n        source: source,\n        style: featureStyle\n      });\n\n      layer.set('name', vectorLayerName);\n\n      map.addLayer(layer);\n    };\n\n    const deinitVectorLayer = () => {\n      const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n      if (!vectorLayer) {\n        return;\n      }\n\n      map.removeLayer(vectorLayer);\n    };\n\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrenPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map]);\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div\n        className='property-grid-header'\n      >\n        {\n          layerName && <span>{layerName}</span>\n        }\n        <div\n          className='right-elements'\n        >\n          <Pagination\n            simple\n            total={features.length}\n            size=\"small\"\n            pageSize={1}\n            current={currentPage}\n            onChange={onChange}\n          />\n          <Tooltip\n            title=\"Copy to clipboard\"\n          >\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                copy(new OlFormatGeoJSON().writeFeature(selectedFeature));\n              }}\n              icon={<FontAwesomeIcon icon={faCopy} />}\n            />\n          </Tooltip>\n        </div>\n      </div>\n      <PropertyGrid\n        feature={selectedFeature}\n        size=\"small\"\n        sticky={true}\n        columns={[{\n          title: 'Key',\n          dataIndex: 'attributeName',\n          key: 'attributeName',\n          width: '50%',\n          ellipsis: true,\n          defaultSortOrder: 'ascend',\n          sorter: (a, b) => a.key.localeCompare(b.key)\n        }, {\n          title: 'Value',\n          dataIndex: 'attributeValue',\n          key: 'attributeValue',\n          width: '50%',\n          ellipsis: true\n        }]}\n        scroll={{\n          y: Object.keys(selectedFeature.getProperties()).length > 6 ?\n            250 :\n            undefined\n        }}\n        {...restProps}\n      />\n    </>\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getQueryLayers = MapUtil.getAllLayers(map)\n    .filter((layer) => {\n      if (!layer.get('hoverable')) {\n        return false;\n      }\n\n      if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n        return true;\n      }\n\n      if (layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS) {\n        return true;\n      }\n\n      return false;\n    }) as WmsLayer[];\n\n  const resultRenderer = (opts: CoordinateInfoState) => {\n    const features = opts.features;\n    const loading = opts.loading;\n\n    if (Object.keys(features).length === 0) {\n      return <span>{t('FeatureInfo.usageHint')}</span>;\n    }\n\n    return Object.entries(features)\n      .map(([layerName, feats]) => {\n        return (\n          <div\n            key={layerName}\n          >\n            <FeatureInfoPropertyGrid\n              features={feats}\n              layerName={layerName}\n              loading={loading}\n            />\n          </div>\n        );\n      });\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  return (\n    <CoordinateInfo\n      featureCount={10}\n      map={map}\n      queryLayers={getQueryLayers}\n      resultRenderer={resultRenderer}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfo;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  Menu,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport LayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlImageWMS from 'ol/source/ImageWMS';\nimport OlTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayer<OlImageWMS | OlTileWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer);\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('LayerTree.externalWmsFolder');\n    const targetGroup: LayerGroup = MapUtil.getLayerByName(map, targetFolderName) as LayerGroup;\n    if (targetGroup) {\n      const existingLayers = targetGroup.getLayers();\n      try {\n        if (existingLayers.getLength() === 1) {\n          targetGroup.set('hideInLayerTree', true);\n        }\n        existingLayers.remove(layer);\n      } catch (e) {\n        Logger.error('Could not remove external layer from map.');\n      }\n    }\n  };\n\n  let items: ItemType[] = [{\n    label: (\n      <Spin\n        spinning={extentLoading}\n      >\n        {t('LayerTreeContextMenu.layerZoomToExtent')}\n      </Spin>\n    ),\n    key: 'zoomToExtent'\n  }];\n\n  const legendVisible = visibleLegendsIds.includes(getUid(layer));\n  if (layer.getVisible()) {\n    items.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer')) {\n    items.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  const settingsMenu = (\n    <Menu\n      items={items}\n      selectable={false}\n      onClick={onContextMenuItemClick}\n    />\n  );\n\n  return (\n    <Dropdown\n      overlay={settingsMenu}\n      placement=\"bottomLeft\"\n      onVisibleChange={setSettingsVisible}\n      visible={settingsVisible}\n      trigger={['click']}\n      {...restProps}\n    >\n      <FontAwesomeIcon icon={faEllipsisV} />\n    </Dropdown>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  getUid\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if (layer instanceof OlLayerGroup) {\n      return !layer.get('hideInLayerTree');\n    } else {\n      return !layer.get('isBackgroundLayer') &&\n        !(layer.getSource && layer.getSource() instanceof OlSourceVector);\n    }\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div>\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div>\n            <div className=\"tree-node-header\">\n              <span>{layer.get('name')}</span>\n              <LayerTreeContextMenu\n                layer={(layer as WmsLayer)}\n                visibleLegendsIds={visibleLegendsIds}\n                setVisibleLegendsIds={setVisibleLegendsIds}\n              />\n            </div>\n            {\n              layer.get('visible') &&\n              <>\n                <div className=\"layer-transparency\">\n                  <LayerTransparencySlider\n                    tipFormatter={val => `${t('LayerTree.transparency')}: ${val}%`}\n                    layer={layer}\n                  />\n                </div>\n              </>\n            }\n            {\n              layer.get('visible') && visibleLegendsIds.includes(getUid(layer)) &&\n              <Legend\n                layer={layer as WmsLayer}\n                errorMsg={t('LayerTree.noLegendAvailable')}\n                extraParams={{\n                  scale,\n                  LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                  TRANSPARENT: true\n                }}\n              />\n            }\n          </div>\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"layertree\">\n      <RgLayerTree\n        map={map}\n        nodeTitleRenderer={treeNodeTitleRenderer}\n        filterFunction={treeFilterFunction}\n        draggable={{\n          icon: false\n        }}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps { }\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      <MeasureButton\n        geodesic\n        name=\"line\"\n        map={map}\n        measureType=\"line\"\n        type=\"link\"\n        continueLineMsg={t('Measure.clicktodrawline')}\n      >\n        <FontAwesomeIcon icon={faPenRuler} />\n        <span className=\"measure-text\">{t('Measure.line')}</span>\n      </MeasureButton>\n      <MeasureButton\n        geodesic\n        name=\"poly\"\n        map={map}\n        measureType=\"polygon\"\n        type=\"link\"\n        continuePolygonMsg={t('Measure.clicktodrawarea')}\n      >\n        <FontAwesomeIcon icon={faDrawPolygon} />\n        <span className=\"measure-text\">{t('Measure.area')}</span>\n      </MeasureButton>\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faRuler,\n  faFileDownload,\n  faStream,\n  faMousePointer,\n  faPlus,\n  faChevronRight,\n  faChevronLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Menu,\n  MenuProps\n} from 'antd';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport {\n  SelectInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  unsetSelectedKey\n} from '../../store/toolMenu';\n\nimport PrintForm from '../PrintForm';\n\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolMenuProps = {} & Partial<MenuProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n  const selectedKeys = useAppSelector(state => state.toolMenu.selectedKeys);\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [activeSubMenuKeys, setActiveSubmenuKeys] = useState<string[]>([]);\n  // It would be much more cleaner to manage state of initialized printManager\n  // inside of PrintForm component itself, but this is not possible due to the\n  // dubious antd menu implementaion: https://ant.design/components/menu/#FAQ\n  // According to this, all menu children will be rendered twice, what leads to\n  // dublicated instantiation of mapfish manager 🤦‍♂️\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n\n  useEffect(() => {\n    if (activeSubMenuKeys.includes('print') && !printManager) {\n      initializeMapProvider();\n    }\n    return () => {\n      if (printManager && activeSubMenuKeys.includes('print')) {\n        printManager.shutdownManager();\n        setPrintManager(null);\n      }\n    };\n  }, [activeSubMenuKeys, printManager]);\n\n  const layerFilter = (l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n    const layerBlackList = [\n      'react-geo_measure',\n      'hoverVectorLayer'\n    ];\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  };\n\n  const initializeMapProvider = useCallback(async () => {\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager({\n      url: '/print',\n      map,\n      timeout: 60000,\n      layerFilter,\n      transformOpts: {\n        rotate: false\n      }\n    });\n\n    await pManager.init()\n      .then(() => {\n        pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n        pManager.setDpi(pManager.getDpis()[0]);\n        pManager.setLayout(pManager.getLayouts()[0]?.name);\n      })\n      .catch((error: any) => {\n        Logger.error(error);\n      });\n    setPrintManager(pManager);\n  }, [map, t]);\n\n  const onMenuSelect = (evt: SelectInfo) => {\n    switch (evt.key) {\n      case 'expand_collapse':\n        setCollapsed(!collapsed);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onMenuDeselect = (evt: SelectInfo) => {\n    switch (evt.key) {\n      case 'expand_collapse':\n        setCollapsed(!collapsed);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onOpenChange = (openKeys: string[]) => {\n    if (collapsed) {\n      openKeys = openKeys.filter(k => k === 'measure_tools' || k === 'expand_collapse');\n    }\n    setActiveSubmenuKeys(openKeys);\n  };\n\n  const onSubmenuTitleClick = (key: TitleEventEntity) => {\n    setCollapsed(false);\n    selectedKeys.forEach(selKey => dispatch(unsetSelectedKey(selKey)));\n    setActiveSubmenuKeys([key.key]);\n  };\n\n  const items = [\n    {\n      className: 'measure',\n      key: 'measure_tools',\n      icon: <FontAwesomeIcon icon={faRuler} />,\n      label: t('ToolMenu.measure'),\n      children: [\n        {\n          key: 'measure-panel',\n          label: <Measure />\n        }\n      ]\n    },\n    {\n      key: 'feature_info',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faMousePointer} />,\n      label: t('ToolMenu.featureInfo'),\n      children: [\n        {\n          key: 'feature-info-panel',\n          label: (\n            <FeatureInfo\n              enabled={activeSubMenuKeys.includes('feature_info')}\n            />\n          )\n        }\n      ]\n    },\n    {\n      key: 'print',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faFileDownload} />,\n      label: t('ToolMenu.print'),\n      children: [\n        {\n          key: 'print-panel',\n          label: (\n            <PrintForm\n              printManager={printManager!}\n              map={map!}\n            />\n          )\n        }\n      ]\n    },\n    {\n      className: 'tree',\n      key: 'tree',\n      onTitleClick: onSubmenuTitleClick,\n      icon: <FontAwesomeIcon icon={faStream} />,\n      label: t('ToolMenu.layertree'),\n      children: [\n        {\n          key: 'tree-panel',\n          label: (\n            <div className='wmsbox'>\n              <LayerTree />\n              <Button\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                // TODO Implement AddWMS modal\n                // onClick={() => dispatch(showAddLayerModal())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n            </div>\n          )\n        }\n      ]\n    },\n    {\n      key: 'expand_collapse',\n      icon: collapsed ?\n        <FontAwesomeIcon icon={faChevronRight} /> :\n        <FontAwesomeIcon icon={faChevronLeft} />\n    }\n  ];\n\n  return (\n    <div className=\"tool-menu\">\n      <Menu\n        mode=\"inline\"\n        inlineCollapsed={collapsed}\n        onSelect={onMenuSelect}\n        onDeselect={onMenuDeselect}\n        openKeys={activeSubMenuKeys}\n        onOpenChange={onOpenChange}\n        multiple={true}\n        selectedKeys={selectedKeys}\n        items={items}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport BasicMapComponent from './components/BasicMapComponent';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport ToolMenu from './components/ToolMenu';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: false,\n    interpolation: {\n      escapeValue: false\n    },\n    supportedLngs: ['de', 'en']\n  });\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        externalWmsFolder: 'Externe Dienste',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden'\n      },\n      ToolMenu: {\n        expand: 'Erweitern / Einklappen',\n        measure: 'Messen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        print: 'Export',\n        layertree: 'Karten'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden. ' +\n          'Bitte laden Sie die Seite erneut.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      Drawer: {\n        title: 'Themen'\n      }\n    }\n  },\n  en: {\n    translation: {\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        externalWmsFolder: 'External services',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend'\n      },\n      ToolMenu: {\n        expand: 'Expand / Collapse',\n        measure: 'Measure',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        print: 'Export',\n        layertree: 'Maps'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application. Please try to reload the page.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      Drawer: {\n        title: 'Layers'\n      }\n    }\n  }\n};\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '/loading.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  configureStore\n} from '@reduxjs/toolkit';\n\nimport logoPath from './logoPath';\nimport title from './title';\nimport toolMenu from './toolMenu';\n\nexport const store = configureStore({\n  reducer: {\n    title,\n    logoPath,\n    toolMenu\n  }\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\nimport {\n  render\n} from 'react-dom';\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport Application from '@terrestris/shogun-util/dist/model/Application';\nimport ShogunApplicationUtil from '@terrestris/shogun-util/dist/parser/ShogunApplicationUtil';\nimport SHOGunClient from '@terrestris/shogun-util/dist/service/SHOGunClient';\n\nimport App from './App';\nimport i18n from './i18n';\n\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\nconst client = new SHOGunClient({\n  url: ClientConfiguration.appPrefix || '/'\n});\n\nconst parser = new ShogunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async () => {\n  const applicationId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n  if (!applicationId) {\n    Logger.info('No application ID given, can\\'t load any configuration.');\n    return;\n  }\n\n  let application;\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n\n    notification.error({\n      message: i18n.t('Index.applicationLoadErrorMessage'),\n      description: i18n.t('Index.applicationLoadErrorDescription', {\n        applicationId: applicationId\n      }),\n      duration: 0\n    });\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n  // @ts-ignore\n  if (application?.clientConfig?.theme?.logoPath) {\n    // @ts-ignore\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application);\n  const layers = await parser.parseLayerTree(application);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: any): ThemeProperties => {\n  const style: any = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\nconst renderApp = async () => {\n  try {\n    const appConfig = await getApplicationConfiguration();\n\n    // @ts-ignore\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: style['--primaryColor']\n      }\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const map = await setupMap(appConfig);\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <ConfigProvider locale={getConfigLang(i18n.language)}>\n            <Provider store={store}>\n              <MapContext.Provider value={map}>\n                <App style={style}/>\n              </MapContext.Provider>\n            </Provider>\n          </ConfigProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    Logger.error(error);\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={i18n.t('Index.errorDescription')}\n          type=\"error\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["restProps","map","useMap","MapComponent","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","t","useTranslation","useEffect","existingControl","getControls","getArray","find","control","OlControlScaleLine","addControl","target","OlControlMousePosition","coordinateFormat","createStringXY","projection","undefinedHTML","className","id","type","ScaleCombo","getView","getProjection","getCode","onClick","window","open","useAppSelector","useSelector","NominatimSearch","countryCodes","allowClear","nominatimBaseUrl","placeholder","title","state","logoPath","src","useDispatch","slice","createSlice","name","initialState","selectedKeys","reducers","setSelectedKey","action","push","payload","unsetSelectedKey","filter","key","actions","printManager","value","maxLength","inputText","setInputText","useState","customParams","onChange","event","showCount","layout","setLayout","getLayouts","l","outputFormats","outputFormat","setOutputFormat","f","toLocaleUpperCase","resolution","setResolution","setDpi","getDpis","d","layerBlackList","form","Form","loading","setLoading","errorMsg","setErrorMsg","legendFilter","layerName","get","notBlacklisted","includes","notHidden","visible","getVisible","MapUtil","printableLayer","OlLayerGroup","res","getResolution","set","setCustomPrintParams","async","printLegend","isInitiated","message","closable","showIcon","onClose","labelCol","span","wrapperCol","label","initialValue","disabled","icon","FontAwesomeIcon","faDownload","downloadUrl","print","Error","download","error","Logger","features","currentPage","setCurrenPage","selectedFeature","setSelectedFeature","vectorLayerName","source","OlSourceVector","fill","OlStyleFill","color","stroke","OlStyleStroke","width","featureStyle","OlStyle","image","OlStyleCircle","radius","layer","OlLayerVector","style","addLayer","initVectorLayer","vectorLayer","removeLayer","deinitVectorLayer","getSource","clear","length","addFeature","simple","total","size","pageSize","current","page","copy","OlFormatGeoJSON","writeFeature","faCopy","PropertyGrid","feature","sticky","columns","dataIndex","ellipsis","defaultSortOrder","sorter","a","b","localeCompare","scroll","y","Object","keys","getProperties","undefined","enabled","getQueryLayers","OlLayerImage","OlSourceImageWMS","OlLayerTile","OlSourceTileWMS","CoordinateInfo","featureCount","queryLayers","resultRenderer","opts","entries","feats","visibleLegendsIds","setVisibleLegendsIds","settingsVisible","setSettingsVisible","extentLoading","setExtentLoading","zoomToLayerExtent","extent","LayerUtil","transformExtent","fit","notification","removeExternalLayer","targetFolderName","targetGroup","existingLayers","getLayers","getLength","remove","e","items","spinning","legendVisible","getUid","settingsMenu","selectable","evt","legendId","newLegendIds","splice","indexOf","overlay","placement","onVisibleChange","trigger","faEllipsisV","nodeTitleRenderer","mapView","unit","getUnits","scale","LayerTransparencySlider","tipFormatter","val","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","filterFunction","draggable","ToggleGroup","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","faDrawPolygon","dispatch","useAppDispatch","toolMenu","collapsed","setCollapsed","activeSubMenuKeys","setActiveSubmenuKeys","setPrintManager","initializeMapProvider","shutdownManager","layerFilter","useCallback","pManager","MapFishPrintV3Manager","url","timeout","transformOpts","rotate","init","then","getOutputFormats","catch","onSubmenuTitleClick","forEach","selKey","faRuler","children","onTitleClick","faMousePointer","faFileDownload","faStream","faPlus","faChevronRight","faChevronLeft","mode","inlineCollapsed","onSelect","onDeselect","openKeys","onOpenChange","k","multiple","i18n","LanguageDetector","use","initReactI18next","resources","de","translation","Measure","line","area","clicktodrawline","clicktodrawarea","FeatureInfo","usageHint","LayerTree","transparency","externalWmsFolder","noLegendAvailable","LayerTreeContextMenu","layerZoomToExtent","extentError","showLegend","hideLegend","ToolMenu","expand","measure","featureInfo","addWms","layertree","PrintForm","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","format","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","Footer","refSystem","mousePosition","imprint","contact","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","errorMessage","errorDescription","Nominatim","Drawer","en","fallbackLng","debug","interpolation","escapeValue","supportedLngs","setLogoPath","setTitle","store","configureStore","reducer","client","SHOGunClient","ClientConfiguration","parser","ShogunApplicationUtil","getConfigLang","lang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","layers","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","opacity","params","LAYERS","setProperties","hoverable","eoLayerGroup","backgroundLayerGroup","center","fromLonLat","OlView","appConfig","applicationId","UrlUtil","location","href","findOne","description","duration","getApplicationConfiguration","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","clientConfig","ConfigProvider","subscribe","document","getState","setApplicationToStore","setupMap","render","fallback","locale","language","MapContext","getElementById","renderApp","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}